filter(
filter(
presidentialElections, year == 2008
),
demVote == max(demVote)
),
state
)
most_dem_state_2008_2
# Using the pipe operator
most_dem_state_2008_3 <- presidentialElections %>% filter(year == 2008) %>% filter(demVote == max(demVote)) %>% select(state)
most_dem_state_2008_3
install.packages("rvest")
library("rvest")
simple <- read_html("https://dataquestio.github.io/web-scraping-pages/simple.html")
simple
complex <- read_html("https://www.nasdaq.com/market-activity/stocks/ko/dividend-history")
complex <- read_html("https://www.nasdaq.com/market-activity/stocks/ko/dividend-history")
complex <- read_html("https://www.nasdaq.com/market-activity/stocks/ko")
complex <- read_html("https://www.nasdaq.com/market-activity/stocks/ko")
httr()
html_attr()
html_attr("https://dataquestio.github.io/web-scraping-pages/simple.html")
html_attr(read_html("https://dataquestio.github.io/web-scraping-pages/simple.html"))
html_attrs(read_html("https://dataquestio.github.io/web-scraping-pages/simple.html"))
html_attrs(read_html("https://www.nasdaq.com/market-activity/stocks/ko/dividend-history"))
session("https://www.nasdaq.com/market-activity/stocks/ko/dividend-history")
uastring <- "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36"
library(httr)
pgsession <- html_session(uastring <- "https://www.nasdaq.com/market-activity/stocks/ko/dividend-history", user_agent(uastring))
pgsession <- session(uastring <- "https://www.nasdaq.com/market-activity/stocks/ko/dividend-history", user_agent(uastring))
library(rvest)
fd <- html_read("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=11/14/2019")
fd <- read_html("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=11/14/2019")
fd
elements <- fd %>% html_elements("table")
elements
fd %>% html_elements("table", "datatable-component events-calender-table-three")
fd %>% html_elements("datatable-component events-calender-table-three")
f <- fd %>% html_elements("datatable-component events-calender-table-three")
f
f <- fd %>% html_element("table", datatable-component events-calender-table-three")
f <- fd %>% html_element("table", "datatable-component events-calender-table-three")
f <- fd %>% html_elements("#datatable-component events-calender-table-three")
f
fd
f <- fd %>% html_elements("table")
f
tables <- fd %>% html_elements("table")
tables
html_elements(tables)
tables %>% html_elements()
tables %>% html_elements("td")
tables[2] %>% html_elements("td")
tables[2]
tables[2] %>% html_elements("tbody")
tables[2] %>% html_elements("tbody") %>% html_elements("tr")
tables[2] %>% html_elements("tbody") %>% html_elements("tr")[1] %>% html_elements("td")
tables[2] %>% html_elements("tbody") %>% html_elements("tr") %>% html_elements("td")
exdivtablerows <- tables[2] %>% html_elements("tbody") %>% html_elements("tr")
exdivtablerows[1]
exdivtablerows[1] %>% html_elements("td")
row1 <- exdivtablerows[1] %>% html_elements("td")
row1
row1[1]
print(row1[1])
row1[1].text
row1 <- exdivtablerows[1] %>% html_elements("td")
row1 %>% html_text2()
library(rvest)
link <- "https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=11/14/2019"
root <- read_html(link) %>% html_elements("table")
exDivTable <- root[2]
exDivTable
root <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]')
root
table %>% html_elements("tbody")
table
link <- "https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=11/14/2019"
table <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]')
table
table %>% html_elements("tbody")
rows <- table %>% html_elements("tbody") %>% html_elements("tr")
row
link <- "https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=11/14/2019"
table <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]')
table
rows <- table %>% html_elements("tbody") %>% html_elements("tr")
row
rows
for (row in rows) {
data <- row %>% html_elements("td") %>% html_text2()
print(data)
}
print(type(data))
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
title
for (row in rows) {
data <- row %>% html_elements("td") %>% html_text2()
df[nrow(df)+1,] <- data
}
df
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
for (row in rows) {
data <- row %>% html_elements("td") %>% html_text2()
df[nrow(df)+1,] <- data
}
df
library(lubridate)
startDate <- mdy("11/14/2019")
startDate
startDate - 1
endDate - startDate
endDate <- mdy("11/21/2019")
endDate - startDate
startDate <- mdy("11/14/2019")
endDate <- mdy("11/21/2019")
for (i in startDate:(endDate - startDate)){
print(i)
}
startDate
endDate
print(endDate)
startDate
endDate
time_length(endDate-startDate, unit = "days")
for (i in time_length(endDate-startDate, unit = "days")){
print(i)
}
for (i in time_length(endDate-startDate, unit = "days")){
print(i)
}
for (i in 1:time_length(endDate-startDate, unit = "days")){
print(i)
}
for (i in 1:time_length(endDate-startDate, unit = "days")){
print(startDate + i)
}
for (i in 0:time_length(endDate-startDate, unit = "days")){
print(startDate + i)
}
for (i in 0:time_length(endDate-startDate, unit = "days")){
as.Date(startDate + i)
}
print(as.Date(startDate + i))
for (i in 0:time_length(endDate-startDate, unit = "days")){
print(as.Date(startDate + i))
}
link <- "https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=11/14/2019"
table <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]')
table
rows <- table %>% html_elements("tbody") %>% html_elements("tr")
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
for (row in rows) {
data <- row %>% html_elements("td") %>% html_text2()
df[nrow(df)+1,] <- data
}
df
for (i in 0:time_length(endDate-startDate, unit = "days")){
print(as.Date(startDate + i))
}
for (i in 0:time_length(endDate-startDate, unit = "days")){
print(as.Date(startDate + i), "%m/%d/%Y")
}
startDate <- mdy("11/14/2019")
endDate <- mdy("11/21/2019")
for (i in 0:time_length(endDate-startDate, unit = "days")){
print(as.Date(startDate + i), "%m/%d/%Y")
}
print(as.Date(startDate + i, "%m/%d/%Y"))
for (i in 0:time_length(endDate-startDate, unit = "days")){
print(as.Date(startDate + i, "%m/%d/%Y"))
}
month(startDate)
month(startDate)
day(startDate)
year(startDate)
paste(m, "/", d, "/", y)
m=month(startDate)
d=day(startDate)
y=year(startDate)
paste(m, "/", d, "/", y)
paste(m, "/", d, "/", y, sep="")
paste(m, "/", d, "/", y, sep="")
for (i in 0:time_length(endDate-startDate, unit = "days")){
paste(month(startDate), "/", day(startDate), "/", year(startDate), sep="")
}
setwd("/Users/dominicsciarrino/Documents/projects/trading/price-action-data-analysis")
install.packages(rvest)
library(rvest)
library(lubridate)
startDate <- mdy("11/14/2019")
endDate <- mdy("11/21/2019")
for (i in 0:time_length(endDate-startDate, unit = "days")){
date_to_address <- paste(month(startDate), "/", day(startDate), "/", year(startDate), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
for (row in rows) {
data <- row %>% html_elements("td") %>% html_text2()
df[nrow(df)+1,] <- data
}
print(df)
break
}
setwd("/Users/dominicsciarrino/Documents/projects/trading/price-action-data-analysis")
install.packages(rvest)
library(rvest)
library(lubridate)
startDate <- mdy("9/19/2016")
endDate <- mdy("9/16/2021")
data_store_path <- paste(getwd(), "/data/store/Fidelity_Dividend_Dates", sep="")
data_store_path
start_year <- year(startDate)
start_month <- month(startDate)
start_year
start_month
for (i in start_year:end_year){
print(i)
}
start_year <- year(startDate)
end_year <- year(endDate)
start_month <- month(startDate)
end_month <- month(endDate)
for (i in start_year:end_year){
print(i)
}
# Get Relevant Date Information
startDate <- mdy("9/19/2016")
endDate <- mdy("9/16/2021")
start_year <- year(startDate)
end_year <- year(endDate)
start_month <- month(startDate)
end_month <- month(endDate)
start_day <- day(startDate)
endDate <- day(endDate)
# Get Relevant Date Information
startDate <- mdy("9/19/2016")
endDate <- mdy("9/16/2021")
start_year <- year(startDate)
end_year <- year(endDate)
# Yearly Loop
for (i in start_year:end_year){
initial_date = mdy(paste("1/1/", i, sep=""))
terminating_date = mdy(paste("12/31/", i, sep=""))
if(i == start_year){
initial_date = startDate
}
if(i == end_year){
terminating_date = endDate
}
break
}
# Yearly Loop
for (i in start_year:end_year){
initial_date = mdy(paste("1/1/", i, sep=""))
terminating_date = mdy(paste("12/31/", i, sep=""))
if(i == start_year){
initial_date = startDate
}
if(i == end_year){
terminating_date = endDate
}
yearly_data_store_path = paste(data_store_path, i, sep="/")
break
}
yearly_data_store_path
# Run monthly until year end
for (m in month(initial_date):month(terminating_date)){
print(m)
}
# Run monthly until year end
for (m in month(initial_date):month(terminating_date)){
monthly_data_store_path <- path(yearly_data_store_path, m, sep="/")
print(monthly_data_store_path)
}
# Run monthly until year end
for (m in month(initial_date):month(terminating_date)){
monthly_data_store_path <- paste(yearly_data_store_path, m, sep="/")
print(monthly_data_store_path)
}
for (d in 0:time_length(terminating_date - initial_date)){
print(initial_date + d)
}
initial_date = mdy(paste("1/1/", y, sep=""))
# Yearly Loop
for (y in start_year:end_year){
initial_date = mdy(paste("1/1/", y, sep=""))
terminating_date <- mdy(paste("12/31/", y, sep=""))
if(y == start_year){
initial_date <- startDate
}
if(y == end_year){
terminating_date <- endDate
}
yearly_data_store_path <- paste(data_store_path, y, sep="/")
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
print(initial_date + d)
}
# Monthly till year-end
#for (m in month(initial_date):month(terminating_date)){
#  monthly_data_store_path <- paste(yearly_data_store_path, m, sep="/")
#
#  first_of_month <- mdy(paste())
#
#}
break
}
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
print(data_store_folder_path)
}
initial_date = mdy(paste("1/1/", y, sep=""))
terminating_date <- mdy(paste("12/31/", y, sep=""))
if(y == start_year){
initial_date <- startDate
}
if(y == end_year){
terminating_date <- endDate
}
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
break
}
df
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
data_store_file_path
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
write.csv(df, data_store_file_path, row.names = FALSE)
break
}
install.packages(rvest)
library(rvest)
library(lubridate)
# Setup Data Storage Directory
data_store_path <- paste(getwd(), "/data/store/Fidelity_Dividend_Dates", sep="")
data_store_path
# Get Relevant Date Information
startDate <- mdy("9/19/2016")
endDate <- mdy("9/16/2021")
start_year <- year(startDate)
end_year <- year(endDate)
# Yearly Loop
for (y in start_year:end_year){
initial_date = mdy(paste("1/1/", y, sep=""))
terminating_date <- mdy(paste("12/31/", y, sep=""))
if(y == start_year){
initial_date <- startDate
}
if(y == end_year){
terminating_date <- endDate
}
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
write.csv(df, data_store_file_path, row.names = FALSE)
}
break
}
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
write.csv(df, data_store_file_path, row.names = FALSE)
}
# Yearly Loop
for (y in start_year:end_year){
initial_date = mdy(paste("1/1/", y, sep=""))
terminating_date <- mdy(paste("12/31/", y, sep=""))
if(y == start_year){
initial_date <- startDate
}
if(y == end_year){
terminating_date <- endDate
}
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
write.csv(df, data_store_file_path, row.names = FALSE)
}
}
# Setup Data Storage Directory
data_store_path <- paste(getwd(), "/data/store/Fidelity_Dividend_Dates", sep="")
data_store_path
# Get Relevant Date Information
startDate <- mdy("1/1/2017")
endDate <- mdy("9/16/2021")
start_year <- year(startDate)
end_year <- year(endDate)
# Yearly Loop
for (y in start_year:end_year){
initial_date = mdy(paste("1/1/", y, sep=""))
terminating_date <- mdy(paste("12/31/", y, sep=""))
if(y == start_year){
initial_date <- startDate
}
if(y == end_year){
terminating_date <- endDate
}
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
write.csv(df, data_store_file_path, row.names = FALSE)
}
}
# Get Relevant Date Information
startDate <- mdy("7/25/2020")
endDate <- mdy("9/16/2021")
start_year <- year(startDate)
end_year <- year(endDate)
# Yearly Loop
for (y in start_year:end_year){
initial_date = mdy(paste("1/1/", y, sep=""))
terminating_date <- mdy(paste("12/31/", y, sep=""))
if(y == start_year){
initial_date <- startDate
}
if(y == end_year){
terminating_date <- endDate
}
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
write.csv(df, data_store_file_path, row.names = FALSE)
}
}
# Get Relevant Date Information
startDate <- mdy("12/16/2020")
endDate <- mdy("9/16/2021")
start_year <- year(startDate)
end_year <- year(endDate)
# Yearly Loop
for (y in start_year:end_year){
initial_date = mdy(paste("1/1/", y, sep=""))
terminating_date <- mdy(paste("12/31/", y, sep=""))
if(y == start_year){
initial_date <- startDate
}
if(y == end_year){
terminating_date <- endDate
}
title <- c("Ticker", "Dividend", "Announcement Date", "Record Date", "Ex-Date", "Pay Date")
for (d in 0:time_length(terminating_date - initial_date, unit="days")){
df <- data.frame(matrix(ncol=6, nrow=0, dimnames=list(NULL, title)))
data_store_folder_path <- paste(data_store_path, year(initial_date + d), month(initial_date + d), sep="/")
data_store_file_path <- paste(data_store_folder_path, paste(day(initial_date + d), ".csv", sep=""), sep="/")
date_to_address <- paste(month(initial_date + d), "/", day(initial_date + d), "/", year(initial_date + d), sep="")
link <- paste("https://eresearch.fidelity.com/eresearch/conferenceCalls.jhtml?tab=dividends&begindate=", date_to_address, sep="")
rows <- read_html(link) %>% html_nodes(xpath='//*[@id="messageTable3"]') %>% html_elements("tbody") %>% html_elements("tr")
for (row in rows) {
df[nrow(df)+1,] <- row %>% html_elements("td") %>% html_text2()
}
write.csv(df, data_store_file_path, row.names = FALSE)
}
}
